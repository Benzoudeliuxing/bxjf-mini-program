{"version":3,"file":"request.js","sources":["utils/request.js"],"sourcesContent":["/**\n * 网络请求封装\n * 基于uni.request封装，提供统一的请求处理\n */\n\n// 请求配置\nconst config = {\n  // 基础URL，根据环境自动切换\n  // baseURL:\"http://192.168.11.111:8080\",\n  baseURL: \"https://bxgm.cklock.cn\",\n\n  // 请求超时时间60s\n  timeout: 60000,\n\n  // 默认请求头\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n\n  // 是否显示loading\n  showLoading: true,\n\n  // loading文本\n  loadingText: \"请求中...\",\n\n  // 是否显示错误提示\n  showError: true,\n};\n\n// 请求队列，用于管理loading状态\nlet requestQueue = [];\n\n/**\n * 显示loading\n */\nfunction showLoading(text = config.loadingText) {\n  if (requestQueue.length === 0) {\n    uni.showLoading({\n      title: text,\n      mask: true,\n    });\n  }\n  requestQueue.push(1);\n}\n\n/**\n * 隐藏loading\n */\nfunction hideLoading() {\n  requestQueue.pop();\n  if (requestQueue.length === 0) {\n    uni.hideLoading();\n  }\n}\n\n/**\n * 获取token\n */\nfunction getToken() {\n  return uni.getStorageSync(\"token\") || \"\";\n}\n\n/**\n * 请求拦截器\n */\nfunction requestInterceptor(options) {\n  // 添加token\n  const token = getToken();\n  if (token) {\n    options.header = {\n      ...options.header,\n      Authorization: `Bearer ${token}`,\n    };\n  }\n\n  // 处理URL\n  if (!options.url.startsWith(\"http\")) {\n    options.url = config.baseURL + options.url;\n  }\n\n  // 设置默认超时时间\n  options.timeout = options.timeout || config.timeout;\n\n  // 显示loading\n  if (options.showLoading !== false && config.showLoading) {\n    showLoading(options.loadingText);\n  }\n\n  console.log(\"请求发送:\", options);\n  return options;\n}\n\n/**\n * 响应拦截器\n */\nfunction responseInterceptor(response, options) {\n  // 隐藏loading\n  if (options.showLoading !== false && config.showLoading) {\n    hideLoading();\n  }\n\n  console.log(\"响应接收:\", response);\n\n  const { statusCode, data } = response;\n\n  // HTTP状态码处理\n  if (statusCode === 200) {\n    // 业务状态码处理\n    if (data.code === 0 || data.success === true) {\n      return Promise.resolve(data);\n    } else {\n      // 业务错误\n      const errorMsg = data.message || data.msg || \"请求失败\";\n\n      // 特殊错误码处理\n      if (data.code === 401 || data.code === 403) {\n        handleAuthError();\n        return Promise.reject(new Error(\"登录已过期，请重新登录\"));\n      }\n\n      if (options.showError !== false && config.showError) {\n        uni.showToast({\n          title: errorMsg,\n          icon: \"none\",\n          duration: 2000,\n        });\n      }\n\n      return Promise.reject(new Error(errorMsg));\n    }\n  } else {\n    // HTTP错误\n    const errorMsg = getHttpErrorMsg(statusCode);\n\n    if (options.showError !== false && config.showError) {\n      uni.showToast({\n        title: errorMsg,\n        icon: \"none\",\n        duration: 2000,\n      });\n    }\n\n    return Promise.reject(new Error(errorMsg));\n  }\n}\n\n/**\n * 错误拦截器\n */\nfunction errorInterceptor(error, options) {\n  // 隐藏loading\n  if (options.showLoading !== false && config.showLoading) {\n    hideLoading();\n  }\n\n  console.error(\"请求错误:\", error);\n\n  let errorMsg = \"网络请求失败\";\n\n  if (error.errMsg) {\n    if (error.errMsg.includes(\"timeout\")) {\n      errorMsg = \"请求超时，请检查网络连接\";\n    } else if (error.errMsg.includes(\"fail\")) {\n      errorMsg = \"网络连接失败，请检查网络\";\n    }\n  }\n\n  if (options.showError !== false && config.showError) {\n    uni.showToast({\n      title: errorMsg,\n      icon: \"none\",\n      duration: 2000,\n    });\n  }\n\n  return Promise.reject(new Error(errorMsg));\n}\n\n/**\n * 处理认证错误\n */\nfunction handleAuthError() {\n  // 清除token和用户信息\n  uni.removeStorageSync(\"token\");\n  uni.removeStorageSync(\"userInfo\");\n  uni.removeStorageSync(\"isLoggedIn\");\n\n  // 跳转到登录页\n  setTimeout(() => {\n    uni.reLaunch({\n      url: \"/pages/login/login\",\n    });\n  }, 1500);\n}\n\n/**\n * 获取HTTP错误信息\n */\nfunction getHttpErrorMsg(statusCode) {\n  const errorMap = {\n    400: \"请求参数错误\",\n    401: \"未授权，请登录\",\n    403: \"拒绝访问\",\n    404: \"请求地址不存在\",\n    408: \"请求超时\",\n    500: \"服务器内部错误\",\n    502: \"网关错误\",\n    503: \"服务不可用\",\n    504: \"网关超时\",\n  };\n\n  return errorMap[statusCode] || `请求失败 (${statusCode})`;\n}\n\n/**\n * 核心请求方法\n */\nfunction request(options) {\n  return new Promise((resolve, reject) => {\n    // 请求拦截\n    const interceptedOptions = requestInterceptor({\n      ...(config.headers && { header: config.headers }),\n      ...options,\n    });\n\n    uni.request({\n      ...interceptedOptions,\n      success: (response) => {\n        responseInterceptor(response, options).then(resolve).catch(reject);\n      },\n      fail: (error) => {\n        errorInterceptor(error, options).catch(reject);\n      },\n    });\n  });\n}\n\n/**\n * GET请求\n */\nfunction get(url, params = {}, options = {}) {\n  return request({\n    url,\n    method: \"GET\",\n    data: params,\n    ...options,\n  });\n}\n\n/**\n * POST请求\n */\nfunction post(url, data = {}, options = {}) {\n  return request({\n    url,\n    method: \"POST\",\n    data,\n    ...options,\n  });\n}\n\n/**\n * PUT请求\n */\nfunction put(url, data = {}, options = {}) {\n  return request({\n    url,\n    method: \"PUT\",\n    data,\n    ...options,\n  });\n}\n\n/**\n * DELETE请求\n */\nfunction del(url, params = {}, options = {}) {\n  return request({\n    url,\n    method: \"DELETE\",\n    data: params,\n    ...options,\n  });\n}\n\n/**\n * 文件上传\n */\nfunction upload(url, filePath, formData = {}, options = {}) {\n  return new Promise((resolve, reject) => {\n    // 添加token\n    const token = getToken();\n    const header = {\n      ...options.header,\n    };\n    if (token) {\n      header[\"Authorization\"] = `Bearer ${token}`;\n    }\n\n    // 处理URL\n    if (!url.startsWith(\"http\")) {\n      url = config.baseURL + url;\n    }\n\n    // 显示loading\n    if (options.showLoading !== false && config.showLoading) {\n      showLoading(\"上传中...\");\n    }\n\n    uni.uploadFile({\n      url,\n      filePath,\n      name: options.name || \"file\",\n      formData,\n      header,\n      success: (response) => {\n        try {\n          const data = JSON.parse(response.data);\n          if (data.code === 0 || data.success === true) {\n            resolve(data);\n          } else {\n            const errorMsg = data.message || data.msg || \"上传失败\";\n            if (options.showError !== false && config.showError) {\n              uni.showToast({\n                title: errorMsg,\n                icon: \"none\",\n              });\n            }\n            reject(new Error(errorMsg));\n          }\n        } catch (error) {\n          reject(new Error(\"响应数据解析失败\"));\n        }\n      },\n      fail: (error) => {\n        const errorMsg = \"上传失败，请重试\";\n        if (options.showError !== false && config.showError) {\n          uni.showToast({\n            title: errorMsg,\n            icon: \"none\",\n          });\n        }\n        reject(new Error(errorMsg));\n      },\n      complete: () => {\n        if (options.showLoading !== false && config.showLoading) {\n          hideLoading();\n        }\n      },\n    });\n  });\n}\n\n/**\n * 设置全局配置\n */\nfunction setConfig(newConfig) {\n  Object.assign(config, newConfig);\n}\n\n/**\n * 获取当前配置\n */\nfunction getConfig() {\n  return { ...config };\n}\n\n// 导出\nexport default {\n  request,\n  get,\n  post,\n  put,\n  delete: del,\n  upload,\n  setConfig,\n  getConfig,\n};\n\n// 便于解构导入\nexport { request, get, post, put, del as delete, upload, setConfig, getConfig };\n"],"names":["config","requestQueue","showLoading","text","uni","hideLoading","getToken","requestInterceptor","options","token","responseInterceptor","response","statusCode","data","errorMsg","handleAuthError","getHttpErrorMsg","errorInterceptor","error","request","resolve","reject","interceptedOptions","get","url","params","post","put","del","upload","filePath","formData","header","setConfig","newConfig","getConfig","request$1"],"mappings":"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"}