{"version":3,"file":"payment.js","sources":["utils/payment.js"],"sourcesContent":["/**\n * 支付工具类\n */\n\nimport { wechatApi, paymentApi } from \"./api.js\";\nimport api from \"./api.js\";\n\n// 微信支付配置\nconst WECHAT_PAY_CONFIG = {\n  // 这里需要配置您的微信支付参数\n  appId: \"\", // 微信小程序AppID\n  mchId: \"\", // 商户号\n  apiKey: \"\", // API密钥\n};\n\n/**\n * 获取微信支付参数\n * @param {Object} orderInfo 订单信息\n * @returns {Promise} 支付参数\n */\nexport async function getWechatPayParams(orderInfo) {\n  try {\n    // 确保orderId为整数类型\n    const paymentData = {\n      ...orderInfo,\n      orderId: parseInt(orderInfo.orderId),\n    };\n\n    const result = await api.payment.createPayment(paymentData);\n    return result.data;\n  } catch (error) {\n    throw new Error(error.message || \"获取支付参数失败\");\n  }\n}\n\n/**\n * 调用微信支付\n * @param {Object} payParams 支付参数\n * @returns {Promise} 支付结果\n */\nexport function requestWechatPayment(payParams) {\n  return new Promise((resolve, reject) => {\n    uni.requestPayment({\n      provider: \"wxpay\",\n      timeStamp: payParams.timeStamp,\n      nonceStr: payParams.nonceStr,\n      package: payParams.package,\n      signType: payParams.signType,\n      paySign: payParams.paySign,\n      success: (res) => {\n        resolve({\n          success: true,\n          data: res,\n        });\n      },\n      fail: (err) => {\n        resolve({\n          success: false,\n          error: err,\n        });\n      },\n    });\n  });\n}\n\n/**\n * 验证支付结果\n * @param {Object} orderInfo 订单信息\n * @returns {Promise} 验证结果\n */\nexport async function verifyPaymentResult(orderInfo) {\n  try {\n    const result = await paymentApi.verifyPayment({\n      orderId: parseInt(orderInfo.orderId),\n    });\n    return result.data;\n  } catch (error) {\n    throw new Error(error.message || \"验证支付结果失败\");\n  }\n}\n\n/**\n * 完整的微信支付流程\n * @param {Object} orderInfo 订单信息\n * @returns {Promise} 支付结果\n */\nexport async function wechatPay(orderInfo) {\n  try {\n    // 1. 获取支付参数\n    const payParams = await getWechatPayParams(orderInfo);\n\n    // 2. 调用微信支付\n    const payResult = await requestWechatPayment(payParams);\n\n    if (payResult.success) {\n      // 3. 验证支付结果\n      const verifyResult = await verifyPaymentResult(orderInfo);\n\n      return {\n        success: true,\n        data: verifyResult,\n      };\n    } else {\n      return {\n        success: false,\n        error: payResult.error,\n      };\n    }\n  } catch (error) {\n    return {\n      success: false,\n      error: error.message,\n    };\n  }\n}\n\n/**\n * 格式化金额\n * @param {number} amount 金额（分）\n * @returns {string} 格式化后的金额\n */\nexport function formatAmount(amount) {\n  return (amount / 100).toFixed(2);\n}\n\n/**\n * 生成随机字符串\n * @param {number} length 字符串长度\n * @returns {string} 随机字符串\n */\nexport function generateNonceStr(length = 32) {\n  const chars =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let result = \"\";\n  for (let i = 0; i < length; i++) {\n    result += chars.charAt(Math.floor(Math.random() * chars.length));\n  }\n  return result;\n}\n\n/**\n * 获取错误信息\n * @param {Object} error 错误对象\n * @returns {string} 错误信息\n */\nexport function getErrorMessage(error) {\n  if (typeof error === \"string\") {\n    return error;\n  }\n\n  if (error.errMsg) {\n    if (error.errMsg.includes(\"cancel\")) {\n      return \"支付已取消\";\n    } else if (error.errMsg.includes(\"fail\")) {\n      return \"支付失败，请重试\";\n    } else if (error.errMsg.includes(\"timeout\")) {\n      return \"支付超时，请重试\";\n    }\n  }\n\n  return \"支付失败，请重试\";\n}\n"],"names":["getWechatPayParams","orderInfo","paymentData","api","error","requestWechatPayment","payParams","resolve","reject","uni","res","err","verifyPaymentResult","paymentApi","wechatPay","payResult","formatAmount","amount","getErrorMessage"],"mappings":"0EAoBO,eAAeA,EAAmBC,EAAW,CAClD,GAAI,CAEF,MAAMC,EAAc,CAClB,GAAGD,EACH,QAAS,SAASA,EAAU,OAAO,CACzC,EAGI,OADe,MAAME,EAAG,IAAC,QAAQ,cAAcD,CAAW,GAC5C,IACf,OAAQE,EAAO,CACd,MAAM,IAAI,MAAMA,EAAM,SAAW,UAAU,CAC5C,CACH,CAOO,SAASC,EAAqBC,EAAW,CAC9C,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtCC,EAAAA,MAAI,eAAe,CACjB,SAAU,QACV,UAAWH,EAAU,UACrB,SAAUA,EAAU,SACpB,QAASA,EAAU,QACnB,SAAUA,EAAU,SACpB,QAASA,EAAU,QACnB,QAAUI,GAAQ,CAChBH,EAAQ,CACN,QAAS,GACT,KAAMG,CAChB,CAAS,CACF,EACD,KAAOC,GAAQ,CACbJ,EAAQ,CACN,QAAS,GACT,MAAOI,CACjB,CAAS,CACF,CACP,CAAK,CACL,CAAG,CACH,CAOO,eAAeC,EAAoBX,EAAW,CACnD,GAAI,CAIF,OAHe,MAAMY,EAAU,WAAC,cAAc,CAC5C,QAAS,SAASZ,EAAU,OAAO,CACzC,CAAK,GACa,IACf,OAAQG,EAAO,CACd,MAAM,IAAI,MAAMA,EAAM,SAAW,UAAU,CAC5C,CACH,CAOO,eAAeU,EAAUb,EAAW,CACzC,GAAI,CAEF,MAAMK,EAAY,MAAMN,EAAmBC,CAAS,EAG9Cc,EAAY,MAAMV,EAAqBC,CAAS,EAEtD,OAAIS,EAAU,QAIL,CACL,QAAS,GACT,KAJmB,MAAMH,EAAoBX,CAAS,CAK9D,EAEa,CACL,QAAS,GACT,MAAOc,EAAU,KACzB,CAEG,OAAQX,EAAO,CACd,MAAO,CACL,QAAS,GACT,MAAOA,EAAM,OACnB,CACG,CACH,CAOO,SAASY,EAAaC,EAAQ,CACnC,OAAQA,EAAS,KAAK,QAAQ,CAAC,CACjC,CAsBO,SAASC,EAAgBd,EAAO,CACrC,GAAI,OAAOA,GAAU,SACnB,OAAOA,EAGT,GAAIA,EAAM,OAAQ,CAChB,GAAIA,EAAM,OAAO,SAAS,QAAQ,EAChC,MAAO,QACF,GAAIA,EAAM,OAAO,SAAS,MAAM,EACrC,MAAO,WACF,GAAIA,EAAM,OAAO,SAAS,SAAS,EACxC,MAAO,UAEV,CAED,MAAO,UACT"}